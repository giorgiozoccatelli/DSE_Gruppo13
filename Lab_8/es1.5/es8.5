int main(void)
{

  /* USER CODE BEGIN 1 */

  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_SYSCFG);
  LL_APB1_GRP1_EnableClock(LL_APB1_GRP1_PERIPH_PWR);

  /* System interrupt init*/
  NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);

  /* SysTick_IRQn interrupt configuration */
  NVIC_SetPriority(SysTick_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(),15, 0));

  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();

  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
  MX_ADC1_Init();
  MX_TIM3_Init();
  MX_USART2_UART_Init();
  /* USER CODE BEGIN 2 */
  LL_TIM_WriteReg(TIM2, CR1, LL_TIM_ReadReg(TIM2, CR1) | 0x1);
  LL_GPIO_WriteOutputPort(GPIOA, LL_GPIO_ReadOutputPort(GPIOA) &~ (1 << 6));
  LL_ADC_Enable(ADC1);
  LL_ADC_REG_StartConversionSWStart(ADC1);
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  SysTick_Config(SystemCoreClock/1000);

  int ComparatorUpdate = 0;
  while (1)
  {
    /* USER CODE END WHILE */
	  if (LL_ADC_IsActiveFlag_EOCS(ADC1)) {
		  LL_DBGMCU_APB1_GRP1_FreezePeriph(LL_DBGMCU_APB1_GRP1_TIM3_STOP);
		  LL_ADC_ClearFlag_EOCS(ADC1);
		  ComparatorUpdate = round(20 + 10*LL_ADC_REG_ReadConversionData(ADC1));
		  LL_DBGMCU_APB1_GRP1_UnFreezePeriph(LL_DBGMCU_APB1_GRP1_TIM3_STOP);
	  }
	  else {
		  LL_DBGMCU_APB1_GRP1_FreezePeriph(LL_DBGMCU_APB1_GRP1_TIM3_STOP);
		   ComparatorUpdate = LL_TIM_IC_GetCaptureCH1(TIM3);
		  LL_DBGMCU_APB1_GRP1_UnFreezePeriph(LL_DBGMCU_APB1_GRP1_TIM3_STOP);
		   }
	  if (LL_TIM_IsActiveFlag_CC1(TIM3)) {
		  LL_DBGMCU_APB1_GRP1_FreezePeriph(LL_DBGMCU_APB1_GRP1_TIM3_STOP);
		  LL_TIM_ClearFlag_CC1(TIM3);
		  LL_TIM_OC_SetCompareCH1(TIM3, LL_TIM_GetCounter(TIM3) + ComparatorUpdate);
		  LL_DBGMCU_APB1_GRP1_UnFreezePeriph(LL_DBGMCU_APB1_GRP1_TIM3_STOP);
	  }
    /* USER CODE BEGIN 3 */
  }
  /* USER CODE END 3 */
}
void SysTick_Handler(void) {
	for (int=0; i<x; i++);
  x = (x>>2) | (((x&1)^(x&2)) << 4);
}
